<?xml version="1.0" encoding="UTF-8"?>
<testng-results skipped="0" failed="1" ignored="0" total="5" passed="4">
  <reporter-output>
  </reporter-output>
  <suite name="InfoDrive Test" duration-ms="87735" started-at="2021-04-25T15:54:36Z" finished-at="2021-04-25T15:56:04Z">
    <groups>
    </groups>
    <test name="Smoke" duration-ms="87735" started-at="2021-04-25T15:54:36Z" finished-at="2021-04-25T15:56:04Z">
      <class name="test.SmokeTest">
        <test-method status="PASS" signature="beforeclass()[pri:0, instance:test.SmokeTest@491cc5c9]" name="beforeclass" is-config="true" duration-ms="4026" started-at="2021-04-25T15:54:36Z" finished-at="2021-04-25T15:54:40Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforeclass -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:test.SmokeTest@491cc5c9]" name="beforemethod" is-config="true" duration-ms="6079" started-at="2021-04-25T15:54:40Z" finished-at="2021-04-25T15:54:46Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.SmokeTest.Test1() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Test1()[pri:0, instance:test.SmokeTest@491cc5c9]" name="Test1" duration-ms="70570" started-at="2021-04-25T15:54:46Z" finished-at="2021-04-25T15:55:57Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test1 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.SmokeTest@491cc5c9]" name="afterMethod" is-config="true" duration-ms="3" started-at="2021-04-25T15:55:57Z" finished-at="2021-04-25T15:55:57Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test1 status=SUCCESS method=SmokeTest.Test1()[pri:0, instance:test.SmokeTest@491cc5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:test.SmokeTest@491cc5c9]" name="beforemethod" is-config="true" duration-ms="2091" started-at="2021-04-25T15:55:57Z" finished-at="2021-04-25T15:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.SmokeTest.Test2() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Test2()[pri:0, instance:test.SmokeTest@491cc5c9]" name="Test2" duration-ms="1" started-at="2021-04-25T15:55:59Z" finished-at="2021-04-25T15:55:59Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test2 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.SmokeTest@491cc5c9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-04-25T15:55:59Z" finished-at="2021-04-25T15:55:59Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test2 status=SUCCESS method=SmokeTest.Test2()[pri:0, instance:test.SmokeTest@491cc5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:test.SmokeTest@491cc5c9]" name="beforemethod" is-config="true" duration-ms="1095" started-at="2021-04-25T15:55:59Z" finished-at="2021-04-25T15:56:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.SmokeTest.Test3() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Test3()[pri:0, instance:test.SmokeTest@491cc5c9]" name="Test3" duration-ms="3" started-at="2021-04-25T15:56:00Z" finished-at="2021-04-25T15:56:00Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test3 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.SmokeTest@491cc5c9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-04-25T15:56:00Z" finished-at="2021-04-25T15:56:00Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test3 status=SUCCESS method=SmokeTest.Test3()[pri:0, instance:test.SmokeTest@491cc5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:test.SmokeTest@491cc5c9]" name="beforemethod" is-config="true" duration-ms="1046" started-at="2021-04-25T15:56:00Z" finished-at="2021-04-25T15:56:01Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.SmokeTest.Test4() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="FAIL" signature="Test4()[pri:0, instance:test.SmokeTest@491cc5c9]" name="Test4" duration-ms="11" started-at="2021-04-25T15:56:01Z" finished-at="2021-04-25T15:56:01Z">
          <exception class="junit.framework.AssertionFailedError">
            <message>
              <![CDATA[My fourth testcase is getting failed]]>
            </message>
            <full-stacktrace>
              <![CDATA[junit.framework.AssertionFailedError: My fourth testcase is getting failed
at junit.framework.Assert.fail(Assert.java:47)
at utility.Log.error(Log.java:38)
at test.SmokeTest.Test4(SmokeTest.java:39)
at sun.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
at sun.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
at sun.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
at java.lang.reflect.Method.invoke(Unknown Source)
at org.testng.internal.MethodInvocationHelper.invokeMethod(MethodInvocationHelper.java:124)
at org.testng.internal.Invoker.invokeMethod(Invoker.java:583)
at org.testng.internal.Invoker.invokeTestMethod(Invoker.java:719)
at org.testng.internal.Invoker.invokeTestMethods(Invoker.java:989)
at org.testng.internal.TestMethodWorker.invokeTestMethods(TestMethodWorker.java:125)
at org.testng.internal.TestMethodWorker.run(TestMethodWorker.java:109)
at org.testng.TestRunner.privateRun(TestRunner.java:648)
at org.testng.TestRunner.run(TestRunner.java:505)
at org.testng.SuiteRunner.runTest(SuiteRunner.java:455)
at org.testng.SuiteRunner.runSequentially(SuiteRunner.java:450)
at org.testng.SuiteRunner.privateRun(SuiteRunner.java:415)
at org.testng.SuiteRunner.run(SuiteRunner.java:364)
at org.testng.SuiteRunnerWorker.runSuite(SuiteRunnerWorker.java:52)
at org.testng.SuiteRunnerWorker.run(SuiteRunnerWorker.java:84)
at org.testng.TestNG.runSuitesSequentially(TestNG.java:1208)
at org.testng.TestNG.runSuitesLocally(TestNG.java:1137)
at org.testng.TestNG.runSuites(TestNG.java:1049)
at org.testng.TestNG.run(TestNG.java:1017)
at org.testng.remote.AbstractRemoteTestNG.run(AbstractRemoteTestNG.java:114)
at org.testng.remote.RemoteTestNG.initAndRun(RemoteTestNG.java:251)
at org.testng.remote.RemoteTestNG.main(RemoteTestNG.java:77)
]]>
            </full-stacktrace>
          </exception> <!-- junit.framework.AssertionFailedError -->
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test4 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.SmokeTest@491cc5c9]" name="afterMethod" is-config="true" duration-ms="416" started-at="2021-04-25T15:56:01Z" finished-at="2021-04-25T15:56:02Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test4 status=FAILURE method=SmokeTest.Test4()[pri:0, instance:test.SmokeTest@491cc5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="beforemethod(java.lang.reflect.Method)[pri:0, instance:test.SmokeTest@491cc5c9]" name="beforemethod" is-config="true" duration-ms="1890" started-at="2021-04-25T15:56:02Z" finished-at="2021-04-25T15:56:03Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[public void test.SmokeTest.Test5() throws java.lang.InterruptedException]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- beforemethod -->
        <test-method status="PASS" signature="Test5()[pri:0, instance:test.SmokeTest@491cc5c9]" name="Test5" duration-ms="2" started-at="2021-04-25T15:56:03Z" finished-at="2021-04-25T15:56:03Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- Test5 -->
        <test-method status="PASS" signature="afterMethod(org.testng.ITestResult)[pri:0, instance:test.SmokeTest@491cc5c9]" name="afterMethod" is-config="true" duration-ms="1" started-at="2021-04-25T15:56:03Z" finished-at="2021-04-25T15:56:04Z">
          <params>
            <param index="0">
              <value>
                <![CDATA[[TestResult name=Test5 status=SUCCESS method=SmokeTest.Test5()[pri:0, instance:test.SmokeTest@491cc5c9] output={null}]]]>
              </value>
            </param>
          </params>
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterMethod -->
        <test-method status="PASS" signature="afterclass()[pri:0, instance:test.SmokeTest@491cc5c9]" name="afterclass" is-config="true" duration-ms="455" started-at="2021-04-25T15:56:04Z" finished-at="2021-04-25T15:56:04Z">
          <reporter-output>
          </reporter-output>
        </test-method> <!-- afterclass -->
      </class> <!-- test.SmokeTest -->
    </test> <!-- Smoke -->
  </suite> <!-- InfoDrive Test -->
</testng-results>
